FORMAT: 1A
HOST: http://localhost:8000

# History
This service is intended to provide an easy way to consume data associated to
device attributes, such as temperature readinds, and notifications sent by
other services.


## Retrieve data from attributes [/device/{device_id}/history?lastN={lastN}&attr={attr}&dateFrom={dateFrom}&dateTo={dateTo}]

This endpoint retrieves the last values associated to a device. The query
string might select more than one attribute. For instance:
`?lastN=3&attr=temperature,pressure` will return the last 3 values from both
`temperature` and `pressure` attributes.

If no query string is set, then all values from all attributes are returned.

+ Parameters
    + device_id:labtemp (required, string) - Device identifier
    + attr:temperature (optional, string) - Device attribute to be
    + dateFrom:`2018-06-05T18:00:00Z` (optional, string) - Start time of a time-based query
    + dateTo:`2018-06-15T18:00:00Z` (optional, string) - End time of a time-based query
    + lastN:3 (optional, number) - Number of most current values (valid for each attribute, if more than one)

### Filter by last N values and attribute [GET]
+ Request (application/json)
  + Headers

            Authorization: Bearer JWT

+ Response 200 (application/json; charset=UTF-8)

  + body

            [
              {
                "device_id": "labtemp",
                "ts": "2014-02-14T13:43:33.306Z",
                "metadata": {
                    "protocol": "mqtt",
                    "payload": "json"
                },
                "value": "22.12",
                "attr": "temperature"
              },
              {
                "device_id": "labtemp",
                "ts": "2014-02-14T13:42:33.306Z",
                "metadata": {
                    "protocol": "mqtt",
                    "payload": "json"
                },
                "value": "23.12",
                "attr": "temperature"
              },
              {
                "device_id": "labtemp",
                "ts": "2014-02-14T13:41:33.306Z",
                "metadata": {
                    "protocol": "mqtt",
                    "payload": "json"
                },
                "value": "24.10",
                "attr": "temperature"
              }
            ]

## Retrieving notifications [/notifications/history?{field}={value}]

This endpoint retrieves all notifications generated by services. As each
notification might have different attributes, it is possible to filter them
and select only those needed by a particular application.

+ Parameters
    + field: subject (optional, string) - Which field of the notifications will be filtered. If the field is in the metaAttrsFilter key, just pass the key itself.
    + value: "debug" (optional, string) - Value that will be compared in the filter. If the value type is a string, pass it as "value", if it is int, pass it normally.

### Get notifications from a tenant [GET]
+ Request (application/json)

    + header

            Authorization: Bearer JWT

+ Response 200 (application/json; charset=UTF-8)

    + body

            {
                "notifications": [
                    {
                        "msgID": "12345",
                        "metaAttrsFilter": {
                        "level": 3,
                        "shouldPersist": true
                    },
                    "message": "Something went wrong.",
                    "subject": "debug",
                    "ts": "2019-02-20T17:17:52.863000Z"
                    }
                ]
}

